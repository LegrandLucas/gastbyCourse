{"version":3,"sources":["../../../src/utils/dev-ssr/develop-html-route.ts"],"names":["route","app","program","store","get","req","res","next","pathObj","getState","path","htmlActivity","report","phantomActivity","start","renderResponse","page","htmlComponentRendererPath","directory","status","send","error","id","filePath","filename","location","line","column","row","context","errorHtml","message","codeFrame","end"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEO,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KACnB;AACAF,GAAG,CAACG,GAAJ,CAAS,GAAT,EAAa,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACrC,2CAAoB,6BAApB;AAEA,QAAMC,OAAO,GAAG,oCAAeL,KAAK,CAACM,QAAN,EAAf,EAAiCJ,GAAG,CAACK,IAArC,CAAhB;;AAEA,MAAI,CAACF,OAAL,EAAc;AACZ,WAAOD,IAAI,EAAX;AACD;;AAED,QAAMI,YAAY,GAAGC,kBAAOC,eAAP,CAAwB,wBAAxB,EAAiD,EAAjD,CAArB;;AACAF,EAAAA,YAAY,CAACG,KAAb;;AAEA,MAAI;AACF,UAAMC,cAAc,GAAG,MAAM,kCAAc;AACzCL,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAD2B;AAEzCM,MAAAA,IAAI,EAAER,OAFmC;AAGzCL,MAAAA,KAHyC;AAIzCc,MAAAA,yBAAyB,EAAG,GAAEf,OAAO,CAACgB,SAAU,wBAJP;AAKzCA,MAAAA,SAAS,EAAEhB,OAAO,CAACgB;AALsB,KAAd,CAA7B;AAOAZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,cAArB;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACd;AACA;AACA;AACA,QAAIA,KAAK,KAAM,UAAf,EAA0B;AACxB,aAAOd,IAAI,EAAX;AACD;;AAEDK,sBAAOS,KAAP,CAAa;AACXC,MAAAA,EAAE,EAAG,OADM;AAEXC,MAAAA,QAAQ,EAAEF,KAAK,CAACG,QAFL;AAGXC,MAAAA,QAAQ,EAAE;AACRX,QAAAA,KAAK,EAAE;AACLY,UAAAA,IAAI,EAAEL,KAAK,CAACK,IADP;AAELC,UAAAA,MAAM,EAAEN,KAAK,CAACO;AAFT;AADC,OAHC;AASXC,MAAAA,OAAO,EAAE;AACPnB,QAAAA,IAAI,EAAEF,OAAO,CAACE,IADP;AAEPa,QAAAA,QAAQ,EAAEF,KAAK,CAACG,QAFT;AAGPE,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAHL;AAIPC,QAAAA,MAAM,EAAEN,KAAK,CAACO;AAJP;AATE,KAAb;;AAgBA,QAAIE,SAAS,GAAI;AACvB;AACA;AACA,iDAAiDzB,GAAG,CAACK,IAAK;AAC1D,kDAAkDW,KAAK,CAACG,QAAS;AACjE;AACA;AACA,mBAAmBH,KAAK,CAACU,OAAQ,aAP3B;;AAQA,QAAIV,KAAK,CAACW,SAAV,EAAqB;AACnBF,MAAAA,SAAS,IAAK,gDAA+CT,KAAK,CAACW,SAAU,QAA7E;AACD;;AACD1B,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,SAArB;AACD;;AAEDnB,EAAAA,YAAY,CAACsB,GAAb,GA3DqC,CA6DrC;;AACA,SAAO,IAAP;AACD,CA/DD,CAFK","sourcesContent":["import report from \"gatsby-cli/lib/reporter\"\nimport { trackFeatureIsUsed } from \"gatsby-telemetry\"\n\nimport { findPageByPath } from \"../find-page-by-path\"\nimport { renderDevHTML } from \"./render-dev-html\"\n\nexport const route = ({ app, program, store }): any =>\n  // Render an HTML page and serve it.\n  app.get(`*`, async (req, res, next) => {\n    trackFeatureIsUsed(`GATSBY_EXPERIMENTAL_DEV_SSR`)\n\n    const pathObj = findPageByPath(store.getState(), req.path)\n\n    if (!pathObj) {\n      return next()\n    }\n\n    const htmlActivity = report.phantomActivity(`building HTML for path`, {})\n    htmlActivity.start()\n\n    try {\n      const renderResponse = await renderDevHTML({\n        path: pathObj.path,\n        page: pathObj,\n        store,\n        htmlComponentRendererPath: `${program.directory}/public/render-page.js`,\n        directory: program.directory,\n      })\n      res.status(200).send(renderResponse)\n    } catch (error) {\n      // THe page errored but couldn't read the page component.\n      // This is a race condition when a page is deleted but its requested\n      // immediately after before anything can recompile.\n      if (error === `404 page`) {\n        return next()\n      }\n\n      report.error({\n        id: `11614`,\n        filePath: error.filename,\n        location: {\n          start: {\n            line: error.line,\n            column: error.row,\n          },\n        },\n        context: {\n          path: pathObj.path,\n          filePath: error.filename,\n          line: error.line,\n          column: error.row,\n        },\n      })\n      let errorHtml = `<title>Develop SSR Error</title><h1>Error<h1>\n        <h2>The page didn't SSR correctly</h2>\n        <ul>\n          <li><strong>URL path:</strong> <code>${req.path}</code></li>\n          <li><strong>File path:</strong> <code>${error.filename}</code></li>\n        </ul>\n        <h3>error message</h3>\n        <p><code>${error.message}</code></p>`\n      if (error.codeFrame) {\n        errorHtml += `<pre style=\"background:#fdfaf6;padding:8px;\">${error.codeFrame}</pre>`\n      }\n      res.status(500).send(errorHtml)\n    }\n\n    htmlActivity.end()\n\n    // Make eslint happy\n    return null\n  })\n"],"file":"develop-html-route.js"}